spring.application.name=graddy

# context-path
server.servlet.context-path=/api

server.port=8080

# 문자 인코딩 설정
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.enabled=true

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA ??
# JPA? entity? ???? ???? ???? ??? ?? ??
spring.jpa.hibernate.ddl-auto=none
# ??? sql ??? ???? ??
spring.jpa.show-sql=true
# ??? sql??? ????? ?? ??? ??? ? ?? ???? ??
spring.jpa.properties.hibernate.format_sql = true

logging.level.org.apache.coyote.http11=debug
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# AI 커리큘럼 생성 API 설정
ai.curriculum.api.url=http://localhost:8000

# FastAPI 서버 설정 (AI 피드백 생성용)
fastapi.server.url=http://localhost:8000

# 로깅 설정
logging.level.com.smhrd.graddy.study.service.AICurriculumService=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# 보안
solapi.sender.number=${SOLAPI_SENDER_NUMBER}
solapi.api.key=${SOLAPI_API_KEY}
solapi.api.secret=${SOLAPI_API_SECRET}
# OpenAI API 설정
openai.api.key=${OPENAI_API_KEY}
openai.api.url=https://api.openai.com/v1/chat/completions
openai.model=gpt-4o

# 파일 스토리지 설정
# 스토리지 타입: local (로컬 파일 시스템) 또는 s3 (AWS S3)
file.storage.type=${FILE_STORAGE_TYPE:local}
file.storage.service=${FILE_STORAGE_SERVICE:localFileService}

# 로컬 파일 저장 설정 (file.storage.type=local일 때 사용)
file.upload.path=uploads

# AWS S3 설정 (file.storage.type=s3일 때 사용)
aws.s3.access-key=${AWS_ACCESS_KEY_ID:test}
aws.s3.secret-key=${AWS_SECRET_ACCESS_KEY:test}
aws.s3.region=${AWS_REGION:ap-northeast-1}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:graddy-files}
aws.s3.endpoint=${AWS_S3_ENDPOINT:}

# 파일 업로드 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 스케줄링 설정
spring.task.scheduling.pool.size=5
spring.task.scheduling.thread-name-prefix=scheduled-task-
logging.level.com.smhrd.graddy.study.service.StudyProjectStatusScheduler=INFO

# Swagger UI 설정
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.enabled=true
